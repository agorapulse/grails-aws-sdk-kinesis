buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "2.0.7"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-plugin-testing"

    // Latest Kinesis client lib
    compile "com.amazonaws:amazon-kinesis-client:$awsKinesisClientVersion"

    // Latest AWS SDK Kinesis lib
    compile "com.amazonaws:aws-java-sdk-kinesis:$awsJavaSdkVersion"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

grailsPublish {
    user = System.getenv("BINTRAY_USER") ?: ''
    key = System.getenv("BINTRAY_KEY") ?: ''
    userOrg = 'agorapulse'
    githubSlug = "agorapulse/grails-$project.name"
    license {
        name = 'Apache-2.0'
    }
    title = "AWS SDK Kinesis"
    desc = "Grails AWS SDK Kinesis plugin"
    developers = [benorama:"Benoit Hediard"]
    portalUser = System.getenv("GRAILS_PORTAL_USER") ?: ''
    portalPassword = System.getenv("GRAILS_PORTAL_PASSWORD") ?: ''
}
